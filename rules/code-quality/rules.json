[{"id": "readability-clarity","name": "Readability and Clarity","description": "Code should be written to be easily understandable by other developers.","documentation": "readability-clarity.md","tags": ["code-quality", "readability", "clean-code"],"severity": "high","applies_to": ["all"],"automation_potential": ["linter", "code-review"],"suggested_tools": ["ESLint", "Pylint", "Flake8", "SonarQube"],"related_rules": ["consistency", "simplicity-kiss", "commenting-documentation"]},{"id": "simplicity-kiss","name": "Simplicity and Conciseness (KISS)","description": "Prefer simple, straightforward solutions over complex ones.","documentation": "simplicity-kiss.md","tags": ["code-quality", "simplicity", "kiss-principle"],"severity": "high","applies_to": ["all"],"automation_potential": ["static-analysis", "code-review"],"suggested_tools": ["SonarQube", "ESLint", "Pylint"],"related_rules": ["readability-clarity", "refactoring", "srp"]},{"id": "consistency","name": "Consistency","description": "Follow a consistent coding style, naming convention, and architectural pattern throughout the project.","documentation": "consistency.md","tags": ["code-quality", "consistency", "coding-standards"],"severity": "high","applies_to": ["all"],"automation_potential": ["linter", "formatter", "code-review"],"suggested_tools": ["ESLint", "Prettier", "Black", "isort", "gofmt"],"related_rules": ["readability-clarity"]},{"id": "refactoring","name": "Refactoring","description": "Regularly refactor code to improve its structure, readability, and performance without changing its external behavior.","documentation": "refactoring.md","tags": ["code-quality", "refactoring", "technical-debt"],"severity": "medium","applies_to": ["all"],"automation_potential": ["static-analysis", "code-review"],"suggested_tools": ["SonarQube", "IDE Refactoring Tools"],"related_rules": ["simplicity-kiss", "srp", "ocp"]},{"id": "commenting-documentation","name": "Commenting and Documentation","description": "Write comments to explain the \"why,\" not the \"what.\" Document complex algorithms, business logic, and API contracts.","documentation": "commenting-documentation.md","tags": ["code-quality", "comments", "documentation"],"severity": "medium","applies_to": ["all"],"automation_potential": ["linter", "code-review"],"suggested_tools": ["ESLint", "Pylint", "JSDoc", "Sphinx"],"related_rules": ["readability-clarity"]}]}